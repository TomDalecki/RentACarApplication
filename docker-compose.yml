version: '3.1'
services:
  backend:
    build: .
    ports:
      - 8190:8190
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/RentACarApp
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - spring-boot-postgres
    depends_on:
      PostgreSQL:
        condition: service_healthy
  PostgreSQL:
      image: postgres:13-alpine3.18
      ports:
        - 5432:5432
      environment:
        - POSTGRES_DB=RentACarApp
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      volumes:
        - db-data:/var/lib/postgresql/data
      networks:
        - spring-boot-postgres
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
volumes:
  db-data:
networks:
  spring-boot-postgres: